name: Build flake outputs

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - update-flake-inputs

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  inventory:
    name: Build inventory
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.matrix.outputs.packages }}
      devShells: ${{ steps.matrix.outputs.devShells }}
      homeConfigurations: ${{ steps.matrix.outputs.homeConfigurations }}
      nixosConfigurations: ${{ steps.matrix.outputs.nixosConfigurations }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
        with:
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - id: matrix
        run: |
          {
          echo "packages=$(nix run .#get-ci-info -- --system x86_64-linux --output packages)"
          echo "devShells=$(nix run .#get-ci-info -- --system x86_64-linux --output devShells)"
          echo "homeConfigurations=$(nix run .#get-ci-info -- --system x86_64-linux --output homeConfigurations)"
          echo "nixosConfigurations=$(nix run .#get-ci-info -- --system x86_64-linux --output nixosConfigurations)"
          } >> "$GITHUB_OUTPUT"

  build-packages:
    name: Build packages
    needs: inventory
    if: ${{ toJSON(fromJSON(needs.inventory.outputs.packages)) != '[]' }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.inventory.outputs.packages) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
        with:
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          system: ${{ matrix.system }}
      - run: |
          nix build ${{ matrix.derivation }}

  build-devshells:
    name: Build devShells
    needs: inventory
    if: ${{ toJSON(fromJSON(needs.inventory.outputs.devShells)) != '[]' }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.inventory.outputs.devShells) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
        with:
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          system: ${{ matrix.system }}
      - run: |
          nix build ${{ matrix.derivation }}

  build-homes:
    name: Build homeConfigurations
    needs: inventory
    if: ${{ toJSON(fromJSON(needs.inventory.outputs.homeConfigurations)) != '[]' }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.inventory.outputs.homeConfigurations) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
        with:
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          system: ${{ matrix.system }}
      - run: |
          nix build ${{ matrix.derivation }}

  build-raspberrypi:
    name: Build raspberrypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-setup
        with:
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          system: aarch64-linux
      - run: |
          nix build .#nixosConfigurations.raspberrypi.config.system.build.toplevel
