# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
  	"pcie_brcmstb" # required for the pcie bus to work
  	"reset-raspberrypi" # required for vl805 firmware to load
    "uas"
  	"usbhid"
  	"usb_storage"
  	"vc4"
  ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/322a6d8e-f946-4d60-98a3-dd1af1373c79";
    fsType = "btrfs";
    options = ["defaults,noatime,compress=zstd,subvol=@"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/322a6d8e-f946-4d60-98a3-dd1af1373c79";
    fsType = "btrfs";
    options = ["defaults,noatime,compress=zstd,subvol=@home"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/322a6d8e-f946-4d60-98a3-dd1af1373c79";
    fsType = "btrfs";
    options = ["defaults,noatime,compress=zstd,subvol=@nix"];
  };

  swapDevices = [
    {
      device = "/.swapfile";
      size = 2 * 1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enabcm6e4ei0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
